{"version":3,"file":"static/js/930.e05a25ad.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,GAAAA,KAAH,gDAIJC,EAAcD,EAAAA,GAAAA,MAAH,6NAYXE,EAASF,EAAAA,GAAAA,OAAH,8H,SCYnB,EA3BmB,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,UACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,UAACP,EAAD,CAAMQ,SAXY,SAAAC,GAClBA,EAAEC,iBACGJ,GAILF,EAAUE,GACVC,EAAS,KAJPI,MAAM,iBAKT,EAGC,WACE,SAACT,EAAD,CAAaU,KAAK,OAAOC,MAAOP,EAAOQ,SAhBrB,SAAAL,GACpBF,EAASE,EAAEM,OAAOF,MACnB,KAeG,SAACV,EAAD,CAAQS,KAAK,SAAb,sBAGL,E,SCxBYI,EAAYf,EAAAA,GAAAA,GAAH,8GAOTgB,EAAgBhB,EAAAA,GAAAA,GAAH,+GAKbiB,EAAMjB,EAAAA,GAAAA,IAAH,+CAGHkB,EAAalB,EAAAA,GAAAA,IAAH,0CAGVmB,EAAanB,EAAAA,GAAAA,EAAH,6D,SC0BvB,EAjCmB,SAAC,GAAgB,IAAdoB,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAAMC,EAAjC,EAAiCA,aAAjC,OACV,SAACZ,EAAD,WACE,UAAC,KAAD,CAAMa,GAAE,UAAKL,GAAMM,MAAO,CAAEC,KAAMV,GAAlC,UACGI,GACC,SAACR,EAAD,CAAKe,KAAKC,EAAAA,EAAAA,GAAOR,GAAcS,IAAI,GAAGC,MAAO,IAAKC,OAAQ,OAE1D,SAACnB,EAAD,CACEe,IAAKK,EACLH,IAAI,mBACJC,MAAO,IACPC,OAAQ,OAGZ,SAAClB,EAAD,WACE,UAACC,EAAD,WACGO,GAASC,EADZ,KAEGC,EAAeA,EAAaU,MAAM,EAAG,GAAK,OAF7C,aAbcd,EADV,KAwBjB,ECnCc,SAASe,IAAU,IAAD,EAC/B,GAAgCnC,EAAAA,EAAAA,UAAS,IAAzC,eAAOoC,EAAP,KAAoBlC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeqB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAO,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAwB7C,OAhBAC,EAAAA,EAAAA,YAAU,WACHP,IAELQ,EAAAA,EAAAA,IAAaR,GAAaS,MAAK,SAAAC,GAC7BT,GAAU,OAAIS,GACf,GACF,GAAE,CAACV,KAEJO,EAAAA,EAAAA,YAAU,YACJP,GAAgBK,IAEpBG,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAC,GACzBT,GAAU,OAAIS,GACf,GACF,GAAE,CAACL,EAASL,KAGX,4BACE,SAAC,EAAAW,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,OAEF,SAAC,EAAD,CAAYjD,UA3BK,SAAAE,GACnBC,EAASD,GAETuC,EAAgB,CAAEvC,MAAAA,GACnB,IAwBIe,EAAOiC,OAAS,IAAK,SAAC,EAAD,CAAYjC,OAAQA,MAG/C,C,uKC1CYkC,EAAM,mCACNC,EAAS,mCACf,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGAGKC,EAAAA,EAAAA,IAAA,kEACmDH,IAJxD,uBAEKJ,EAFL,EAEHQ,KAAQR,QAFL,kBAOEA,GAPF,kEAUA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA4B3C,GAA5B,yFAGKoD,EAAAA,EAAAA,IAAA,4DAC6CH,EAD7C,kBAC0DjD,IAJ/D,uBAEK6C,EAFL,EAEHQ,KAAQR,QAFL,kBAOEA,GAPF,kE,sBCbQ,SAASjB,EAAO0B,GAC7B,MAAM,mCAAN,OAA0CA,EAC3C,C","sources":["components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/getMovies.js","services/putImg.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 240px;\n  height: 30px;\n  margin-right: 10px;\n  border: none;\n  border-bottom: 1px solid orange;\n  background-color: whitesmoke;\n  &:focus-visible {\n    outline-color: orange;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 30px;\n  border: none;\n  border-radius: 4px;\n  background-color: orange;\n`;\n","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Form, SearchInput, Button } from './SearchForm.styled';\nconst SearchForm = ({ movieName }) => {\n  const [query, setQuery] = useState('');\n\n  const changeHandler = e => {\n    setQuery(e.target.value);\n  };\n\n  const startSearch = e => {\n    e.preventDefault();\n    if (!query) {\n      alert('Empty request!');\n      return;\n    }\n    movieName(query);\n    setQuery('');\n  };\n\n  return (\n    <Form onSubmit={startSearch}>\n      <SearchInput type=\"text\" value={query} onChange={changeHandler} />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\nSearchForm.propTypes = {\n  movieName: PropTypes.func.isRequired,\n};\nexport default SearchForm;\n","import styled from 'styled-components';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  gap: 15px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: 240px;\n  background-color: white;\n  box-shadow: 3px 3px 3px 3px lightgray;\n`;\nexport const Img = styled.img`\n  border-radius: 4px;\n`;\nexport const MovieThumb = styled.div`\n  padding: 10px;\n`;\nexport const MovieTitle = styled.p`\n  font-size: 14px;\n  color: black;\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport putImg from 'services/putImg';\nimport {\n  MovieList,\n  MovieListItem,\n  MovieTitle,\n  MovieThumb,\n  Img,\n} from './MoviesList.styled';\n\nimport noPoster from '../../sorry-image-not-available.jpg';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MovieList>\n      {movies.map(({ id, poster_path, title, name, release_date }) => (\n        <MovieListItem key={id}>\n          <Link to={`${id}`} state={{ from: location }}>\n            {poster_path ? (\n              <Img src={putImg(poster_path)} alt=\"\" width={240} height={320} />\n            ) : (\n              <Img\n                src={noPoster}\n                alt=\"sorry, no poster\"\n                width={240}\n                height={320}\n              />\n            )}\n            <MovieThumb>\n              <MovieTitle>\n                {title || name} (\n                {release_date ? release_date.slice(0, 4) : 'Soon'})\n              </MovieTitle>\n            </MovieThumb>\n          </Link>\n        </MovieListItem>\n      ))}\n    </MovieList>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import { useSearchParams, Outlet } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { searchMovies } from 'services/getMovies';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [searchQuery, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const request = searchParams.get('query') ?? '';\n\n  const getMovieName = query => {\n    setQuery(query);\n\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    searchMovies(searchQuery).then(results => {\n      setMovies([...results]);\n    });\n  }, [searchQuery]);\n\n  useEffect(() => {\n    if (searchQuery || !request) return;\n\n    searchMovies(request).then(results => {\n      setMovies([...results]);\n    });\n  }, [request, searchQuery]);\n\n  return (\n    <div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n      <SearchForm movieName={getMovieName} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n}\n","import axios from 'axios';\nexport const KEY = '008f0f784afae380e7e38ed25ea842e9';\nexport const imgURL = 'https://image.tmdb.org/t/p/w300/';\nexport async function getTrendingMovies() {\n  const {\n    data: { results },\n  } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${KEY}`\n  );\n\n  return results;\n}\n\nexport async function searchMovies(query) {\n  const {\n    data: { results },\n  } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}`\n  );\n\n  return results;\n}\n","export default function putImg(img) {\n  return `https://image.tmdb.org/t/p/w300/${img}`;\n}\n"],"names":["Form","styled","SearchInput","Button","movieName","useState","query","setQuery","onSubmit","e","preventDefault","alert","type","value","onChange","target","MovieList","MovieListItem","Img","MovieThumb","MovieTitle","movies","location","useLocation","map","id","poster_path","title","name","release_date","to","state","from","src","putImg","alt","width","height","noPoster","slice","Movies","searchQuery","setMovies","useSearchParams","searchParams","setSearchParams","request","get","useEffect","searchMovies","then","results","Suspense","fallback","length","KEY","imgURL","getTrendingMovies","axios","data","img"],"sourceRoot":""}